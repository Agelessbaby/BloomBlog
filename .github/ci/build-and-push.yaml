apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-and-push
spec:
  workspaces:
    - name: source
      description: Workspace containing the source code to build
  params:
    - name: repo-url
      description: Git repository URL
    - name: revision
      description: Git revision (branch/tag)
    - name: context
      description: Build context (e.g., directory containing Dockerfile)
    - name: image-name
      description: Name of the image to push
  steps:
    - name: git-clone
      image: alpine/git:latest
      script: |
        #!/bin/sh
        set -e
        git clone -b $(params.revision) $(params.repo-url) /workspace/source

    - name: build-and-push
      image: registry.fedoraproject.org/fedora:latest # 更加强大的镜像，包含 curl 和其他工具
      script: |
        #!/bin/sh
        set -e
        # 提取 DO_API_TOKEN
        export DO_API_TOKEN=$(cat /root/.docker/.dockerconfigjson | base64 -d | jq -r '.auths["registry.digitalocean.com"].auth' | base64 -d | cut -d':' -f2)

        # 安装 Buildah 和 DigitalOcean CLI
        dnf install -y buildah curl jq tar
        curl -fsSL https://github.com/digitalocean/doctl/releases/download/v1.100.1/doctl-1.100.1-linux-amd64.tar.gz | tar -xz -C /usr/local/bin

        # 验证安装
        buildah --version
        doctl version

        # Authenticate with DigitalOcean
        echo "${DO_API_TOKEN}" | doctl auth init --access-token

        # Build and push the image
        buildah bud --format=docker -t $(params.image-name) -f /workspace/source/$(params.context)/Dockerfile /workspace/source
        buildah push $(params.image-name)
      securityContext:
        privileged: true
      volumeMounts:
        - name: registry-bloomblog-secret
          mountPath: /root/.docker
  volumes:
    - name: registry-bloomblog-secret
      secret:
        secretName: registry-bloomblog
