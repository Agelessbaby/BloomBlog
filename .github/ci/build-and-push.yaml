apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-and-push
spec:
  workspaces:
    - name: source
      description: Workspace containing the source code to build
  params:
    - name: repo-url
      description: Git repository URL
    - name: revision
      description: Git revision (branch/tag)
    - name: context
      description: Build context (e.g., directory containing Dockerfile)
    - name: image-name
      description: Full image name (including registry and tag)
  steps:
    - name: git-clone
      image: alpine/git:latest
      script: |
        #!/bin/sh
        set -e
        echo "Cloning repository: $(params.repo-url) at revision: $(params.revision)"
        git clone -b $(params.revision) $(params.repo-url) /workspace/source
        echo "Repository cloned successfully."

    - name: prepare-build
      image: registry.fedoraproject.org/fedora:latest
      script: |
        #!/bin/sh
        set -e
        echo "Installing dependencies..."
        dnf install -y buildah curl tar gzip
        echo "Dependencies installed."

        # 将 .dockerconfigjson 拷贝为 config.json，让 buildah 自动使用该认证信息
        if [ ! -f /root/.docker/.dockerconfigjson ]; then
          echo "Error: /root/.docker/.dockerconfigjson not found!"
          exit 1
        fi

        cp /root/.docker/.dockerconfigjson /root/.docker/config.json
        echo "Copied .dockerconfigjson to config.json for buildah authentication."

        echo "Building the image..."
        buildah bud --format=docker -t $(params.image-name) -f /workspace/source/$(params.context)/Dockerfile /workspace/source
        echo "Image built successfully."

        echo "Pushing the image..."
        buildah push $(params.image-name)
        echo "Image pushed successfully."
      securityContext:
        privileged: true
      volumeMounts:
        - name: registry-bloomblog-secret
          mountPath: /root/.docker
  volumes:
    - name: registry-bloomblog-secret
      secret:
        secretName: registry-bloomblog
