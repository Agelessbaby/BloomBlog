version: '2'
services:
  mysql:
    image: 'mysql:latest'
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=BloomBlog
      - MYSQL_ROOT_PASSWORD=123456
    volumes:
      - ./.mysql_data:/var/lib/mysql


  Etcd:
    image: 'bitnami/etcd:latest'
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    ports:
      - 2379:2379
    volumes:
      - ./.etcd-data:/bitnami/etcd  # 将主机的 ./etcd_data 文件夹映射为容器的数据库目录


  # starts 4 docker containers running minio server instances.
  # using nginx reverse proxy, load balancing, you can access
  # it through port 9000.
  # 高性能对象存储
  minio1:
    <<: &minio-common
      image: quay.io/minio/minio:latest
      command: server --console-address ":9001" http://minio{1...4}/data{1...2}
      expose:
        - "9000"
        - "9001"
      environment:
        MINIO_ROOT_USER: bloomblog
        MINIO_ROOT_PASSWORD: bloomblog
      healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
        interval: 30s
        timeout: 20s
        retries: 3
    hostname: minio1
    volumes:
      - ./data/data1-1:/data1
      - ./data/data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - ./data/data2-1:/data1
      - ./data/data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
        - ./data/data3-1:/data1
        - ./data/data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - ./data/data4-1:/data1
      - ./data/data4-2:/data2

  nginx:
    image: nginx:alpine
    hostname: nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./log/nginx:/var/log/nginx:rw
      - ./data/cache/nginx:/usr/local/nginx/conf/cache:rw
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
