version: '3'
services:
  mysql:
    image: 'mysql:latest'
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=BloomBlog
      - MYSQL_ROOT_PASSWORD=123456
      - TZ=Asia/Shanghai
    volumes:
      - ./.mysql_data:/var/lib/mysql
      - ./config/my.cnf:/etc/mysql/my.cnf:ro

  Etcd:
    image: 'bitnami/etcd:latest'
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    ports:
      - 2379:2379
    volumes:
      - ./.etcd-data:/bitnami/etcd

  # 高性能对象存储
  minio1:
    <<: &minio-common
      image: quay.io/minio/minio:latest
      command: server --console-address ":9001" http://minio{1...4}/data{1...2}
      expose:
        - "9000"
        - "9001"
      environment:
        MINIO_ROOT_USER: bloomblog
        MINIO_ROOT_PASSWORD: bloomblog
      healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
        interval: 30s
        timeout: 20s
        retries: 3
    hostname: minio1
    volumes:
      - ./data/data1-1:/data1
      - ./data/data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - ./data/data2-1:/data1
      - ./data/data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - ./data/data3-1:/data1
      - ./data/data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - ./data/data4-1:/data1
      - ./data/data4-2:/data2

  nginx:
    image: nginx:alpine
    hostname: nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./log/nginx:/var/log/nginx:rw
      - ./data/cache/nginx:/usr/local/nginx/conf/cache:rw
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
#    container_name: elasticsearch
#    environment:
#      - discovery.type=single-node
#      - ES_JAVA_OPTS=-Xms1g -Xmx1g
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    volumes:
#      - ./config/elastic_search.yml:/usr/share/elasticsearch/config/elasticsearch.yml  # 挂载配置文件
#      - ./.elastic_data:/usr/share/elasticsearch/data
#
#  kibana:
#    image: kibana:8.6.0
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    depends_on:
#      - elasticsearch
#    ports:
#      - "5601:5601"
#
#
#  logstash:
#    image: docker.elastic.co/logstash/logstash:8.6.0
#    container_name: logstash
#    volumes:
#      - ./config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf  # 挂载 Logstash 配置
#    ports:
#      - "5044:5044"  # Filebeat 或其他服务日志输入端口
#      - "9600:9600"  # Logstash 内部 API 端口
#    environment:
#      - xpack.monitoring.enabled=false  # 禁用 X-Pack 监控（仅开发环境）
#    depends_on:
#      - elasticsearch

#  filebeat:
#    image: docker.elastic.co/beats/filebeat:8.6.0
#    container_name: filebeat
#    volumes:
#      - ./config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro  # 挂载 Filebeat 配置
#      - ./.mysql_data:/var/lib/mysql:ro                     # 挂载 MySQL 日志目录
#    depends_on:
#      - mysql
#      - logstash
#    user: root

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ 的 AMQP 端口
      - "15672:15672" # RabbitMQ 管理界面端口
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=bloomblogadmin
      - TZ=Asia/Shanghai
    volumes:
      - ./.rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  .elastic_data:
    driver: local
  .mysql_data:
    driver: local
  .etcd-data:
    driver: local
  .rabbitmq_data:
    driver: local



